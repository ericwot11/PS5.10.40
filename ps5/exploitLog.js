// Capture et gestion des logs avec types et sauvegarde
function captureExploitLog(message, type = "info") {
    let formattedMessage = `[${new Date().toLocaleTimeString()}] [${type.toUpperCase()}] ${message}`;
    console.log(formattedMessage);  // Affichage dans la console

    // Affichage dans l'interface
    addLog(formattedMessage, type);

    // Sauvegarde dans localStorage
    saveLogToLocalStorage(formattedMessage);
}

// Fonction pour sauvegarder les logs localement
function saveLogToLocalStorage(log) {
    let existingLogs = JSON.parse(localStorage.getItem("exploitLogs")) || [];
    existingLogs.push(log);
    localStorage.setItem("exploitLogs", JSON.stringify(existingLogs));
}

// Fonction pour télécharger les logs sous forme de fichier texte
function exportLogs() {
    let logs = JSON.parse(localStorage.getItem("exploitLogs")) || [];
    let blob = new Blob([logs.join("\n")], { type: "text/plain" });
    let url = URL.createObjectURL(blob);
    let a = document.createElement("a");
    a.href = url;
    a.download = "exploit_logs.txt";
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
}
